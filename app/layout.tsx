import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ToasterClient } from "@/components/ToasterClient";
import { ThemeProvider } from "@/components/providers/ThemeProvider";
import Script from "next/script";
import { cookies } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const themeCookie = (await cookies()).get("theme")?.value as undefined | "light" | "dark" | "system";
  const initialDark = themeCookie === "dark" ? true : themeCookie === "light" ? false : undefined;
  return (
    <html lang="en" suppressHydrationWarning className={initialDark ? "dark" : "light"}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider>
          {children}
          <ToasterClient />
        </ThemeProvider>
      </body>
    </html>
  );
}
